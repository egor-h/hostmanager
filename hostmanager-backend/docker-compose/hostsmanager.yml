version: "3.9"
services:
  hostsmanager:
    build:
      context: ..
      dockerfile: docker-compose/Dockerfile
    ports:
      - ${BACKEND_HTTP_PORT}:8080
    volumes:
      - ./application.yml:/root/application.yml
    depends_on:
      postgres:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
      sonic:
        condition: service_started

    restart: always
    environment:
      DB_SCHEMA: ${DB_SCHEMA}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      SERVICE_LOCATION: ${SERVICE_LOCATION}
      SERVICE_DESCRIPTION: ${SERVICE_DESCRIPTION}
      SONIC_ADDRESS: "sonic"
      SONIC_PORT: 1491
      SONIC_TIMEOUT: 20000
      SONIC_PASSWORD: "SecretPassword"

  flyway:
    image: flyway/flyway
    command: -url=jdbc:postgresql://postgres:5432/${DB_SCHEMA} -schemas=${DB_SCHEMA} -user=root -password=12345 migrate
    volumes:
      - ../src/main/resources/db/migration:/flyway/sql
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_SCHEMA}
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 12345
    expose:
      - "5432"
    volumes:
      - ${DB_DATADIR}:/var/lib/postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U root", "-d ${DB_SCHEMA}"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  sonic:
    image: valeriansaliou/sonic:v1.3.0
    expose:
      - "1491"
    restart: always
    volumes:
      - ./sonic.cfg:/etc/sonic.cfg
      - ${SONIC_DATADIR}:/var/lib/sonic/store/
